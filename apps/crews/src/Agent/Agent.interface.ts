import type { AbstractModelProvider } from "../ModelProvider/ModelProvider";
import { Task } from "../Task";
import { ToolInterface } from "../Tool/Tool.interface";

export interface AgentInterface {
  /** Autogenerated */
  id: string;
  /** The agent's name */
  name: string;
  /** desctiption that determines the tasks its best suited for within the crew */
  role: string;
  /** Defines the goal this agent aims to achieve. This will guide its decision-making process */
  systemMessage?: string;
  /** The language model used by the agent to process and generate text (default: GPT-4) */
  modelProvider: AbstractModelProvider;
  /** Functions that the agent can use to perform tasks */
  tools?: ToolInterface[];
  /** A function that is called after each step of the agent */
  stepCallback?: (output: string) => Promise<void>;
}

export interface AgentConstructor extends Omit<AgentInterface, "id"> {}

export type AgentExecuteTaskParams = {
  task: Task;
  context: any;
  trace: any;
  tools?: ToolInterface[];
};
