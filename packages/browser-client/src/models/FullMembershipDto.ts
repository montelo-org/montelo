/* tslint:disable */
/* eslint-disable */
/**
 * Montelo
 * Documentation for the Montelo API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TeamWithProjectsDto } from './TeamWithProjectsDto';
import {
    TeamWithProjectsDtoFromJSON,
    TeamWithProjectsDtoFromJSONTyped,
    TeamWithProjectsDtoToJSON,
} from './TeamWithProjectsDto';

/**
 * 
 * @export
 * @interface FullMembershipDto
 */
export interface FullMembershipDto {
    /**
     * 
     * @type {string}
     * @memberof FullMembershipDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FullMembershipDto
     */
    role: FullMembershipDtoRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof FullMembershipDto
     */
    teamId: string;
    /**
     * 
     * @type {TeamWithProjectsDto}
     * @memberof FullMembershipDto
     */
    team: TeamWithProjectsDto;
}


/**
 * @export
 */
export const FullMembershipDtoRoleEnum = {
    Admin: 'ADMIN',
    Member: 'MEMBER'
} as const;
export type FullMembershipDtoRoleEnum = typeof FullMembershipDtoRoleEnum[keyof typeof FullMembershipDtoRoleEnum];


/**
 * Check if a given object implements the FullMembershipDto interface.
 */
export function instanceOfFullMembershipDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "teamId" in value;
    isInstance = isInstance && "team" in value;

    return isInstance;
}

export function FullMembershipDtoFromJSON(json: any): FullMembershipDto {
    return FullMembershipDtoFromJSONTyped(json, false);
}

export function FullMembershipDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullMembershipDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'role': json['role'],
        'teamId': json['teamId'],
        'team': TeamWithProjectsDtoFromJSON(json['team']),
    };
}

export function FullMembershipDtoToJSON(value?: FullMembershipDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'role': value.role,
        'teamId': value.teamId,
        'team': TeamWithProjectsDtoToJSON(value.team),
    };
}

