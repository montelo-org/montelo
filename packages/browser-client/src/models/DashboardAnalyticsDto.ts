/* tslint:disable */

/* eslint-disable */

/**
 * Montelo
 * Documentation for the Montelo API.
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists, mapValues } from "../runtime";

/**
 *
 * @export
 * @interface DashboardAnalyticsDto
 */
export interface DashboardAnalyticsDto {
  /**
   *
   * @type {string}
   * @memberof DashboardAnalyticsDto
   */
  cost: string;
  /**
   *
   * @type {string}
   * @memberof DashboardAnalyticsDto
   */
  costChange: string;
  /**
   *
   * @type {string}
   * @memberof DashboardAnalyticsDto
   */
  averageLatency: string;
  /**
   *
   * @type {string}
   * @memberof DashboardAnalyticsDto
   */
  averageLatencyChange: string;
  /**
   *
   * @type {string}
   * @memberof DashboardAnalyticsDto
   */
  logCount: string;
  /**
   *
   * @type {string}
   * @memberof DashboardAnalyticsDto
   */
  logCountChange: string;
}

/**
 * Check if a given object implements the DashboardAnalyticsDto interface.
 */
export function instanceOfDashboardAnalyticsDto(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "cost" in value;
  isInstance = isInstance && "costChange" in value;
  isInstance = isInstance && "averageLatency" in value;
  isInstance = isInstance && "averageLatencyChange" in value;
  isInstance = isInstance && "logCount" in value;
  isInstance = isInstance && "logCountChange" in value;

  return isInstance;
}

export function DashboardAnalyticsDtoFromJSON(json: any): DashboardAnalyticsDto {
  return DashboardAnalyticsDtoFromJSONTyped(json, false);
}

export function DashboardAnalyticsDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DashboardAnalyticsDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    cost: json["cost"],
    costChange: json["costChange"],
    averageLatency: json["averageLatency"],
    averageLatencyChange: json["averageLatencyChange"],
    logCount: json["logCount"],
    logCountChange: json["logCountChange"],
  };
}

export function DashboardAnalyticsDtoToJSON(value?: DashboardAnalyticsDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    cost: value.cost,
    costChange: value.costChange,
    averageLatency: value.averageLatency,
    averageLatencyChange: value.averageLatencyChange,
    logCount: value.logCount,
    logCountChange: value.logCountChange,
  };
}
