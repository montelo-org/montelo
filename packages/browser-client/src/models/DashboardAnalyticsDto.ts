/* tslint:disable */
/* eslint-disable */
/**
 * Montelo
 * Documentation for the Montelo API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChangesDto } from './ChangesDto';
import {
    ChangesDtoFromJSON,
    ChangesDtoFromJSONTyped,
    ChangesDtoToJSON,
} from './ChangesDto';
import type { MaxDto } from './MaxDto';
import {
    MaxDtoFromJSON,
    MaxDtoFromJSONTyped,
    MaxDtoToJSON,
} from './MaxDto';

/**
 * 
 * @export
 * @interface DashboardAnalyticsDto
 */
export interface DashboardAnalyticsDto {
    /**
     * 
     * @type {string}
     * @memberof DashboardAnalyticsDto
     */
    cost: string;
    /**
     * 
     * @type {string}
     * @memberof DashboardAnalyticsDto
     */
    averageLatency: string;
    /**
     * 
     * @type {string}
     * @memberof DashboardAnalyticsDto
     */
    traces: string;
    /**
     * 
     * @type {MaxDto}
     * @memberof DashboardAnalyticsDto
     */
    max: MaxDto;
    /**
     * 
     * @type {ChangesDto}
     * @memberof DashboardAnalyticsDto
     */
    changes: ChangesDto;
}

/**
 * Check if a given object implements the DashboardAnalyticsDto interface.
 */
export function instanceOfDashboardAnalyticsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cost" in value;
    isInstance = isInstance && "averageLatency" in value;
    isInstance = isInstance && "traces" in value;
    isInstance = isInstance && "max" in value;
    isInstance = isInstance && "changes" in value;

    return isInstance;
}

export function DashboardAnalyticsDtoFromJSON(json: any): DashboardAnalyticsDto {
    return DashboardAnalyticsDtoFromJSONTyped(json, false);
}

export function DashboardAnalyticsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardAnalyticsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cost': json['cost'],
        'averageLatency': json['averageLatency'],
        'traces': json['traces'],
        'max': MaxDtoFromJSON(json['max']),
        'changes': ChangesDtoFromJSON(json['changes']),
    };
}

export function DashboardAnalyticsDtoToJSON(value?: DashboardAnalyticsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cost': value.cost,
        'averageLatency': value.averageLatency,
        'traces': value.traces,
        'max': MaxDtoToJSON(value.max),
        'changes': ChangesDtoToJSON(value.changes),
    };
}

